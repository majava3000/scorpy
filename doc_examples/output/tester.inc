.. This will be pulled into the doc string of core.tester, and should be
   normally be generated by the tester helper that will emit the wavedrom as
   well.

.. literalinclude:: example.py
   :language: python
   :dedent: 4
   :linenos:
   :start-after: clip-start
   :end-before: clip-end

.. wavedrom::

    {signal: [
      { name: 'input', wave: 'z====.=.=.=..=..=..z', data: ['A', 'B', 'C', 'A', 'B', 'C', 'A', 'B', 'C']},
      {},
      { name: 'result1', wave: 'z0000.1.0.0..0..0..z'},
      { name: 'result2', wave: 'z====.=.=.=..=..=..z', data: ['n', 'n', 'n', 'n', 'Y', 'n', 'n', 'n', 'n']},
      { name: 'result3', wave: 'z====.=.=.=..=..=..z', data: ['n', 'n', 'n', 'A', 'B', 'C', 'n', 'n', 'n']},
      { name: 'result4', wave: 'z====.=.=.=..=..=..z', data: ['A', 'B', 'C', 'Y', 'Y', 'Y', 'A', 'B', 'C']},
      ],
      head: { tick: -1 },
      config: { skin: 'narrow' },
    }
