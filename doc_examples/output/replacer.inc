.. Generated by gen_replacer.py

.. literalinclude:: ../doc_examples/gen_replacer.py
   :language: python
   :dedent: 4
   :linenos:
   :start-after: example-start-here
   :end-before: example-end-here

.. wavedrom::

    {signal: [
      { name: 'input', wave: 'z====.=.=.=..=..=..=...z', data: ['A', 'B', 'C', 'A', 'B', 'C', 'A', 'B', 'C', 'A']},
      {},
      { name: 'result1', wave: 'z==========z', data: ['A', 'B', 'C', 'A', 'B', 'C', 'A', 'B', 'C', 'A']},
      { name: 'result2', wave: 'z===========.==.==.==..z', data: ['A', 'B', 'C', 'A', 'n', 'B', 'n', 'C', 'n', 'A', 'n', 'B', 'n', 'C', 'n', 'A', 'n']},
      { name: 'result3', wave: 'z===.==.=.=.=.=..=..=.=..=...z', data: ['A', 'B', 'n', 'C', 'A', 'B', 'n', 'C', 'A', 'B', 'n', 'C', 'A']},
      { name: 'result4', wave: 'z===.=.=..=..z', data: ['B', 'C', 'B', 'C', 'B', 'C']},
      { name: 'result5', wave: 'z====.=.=.=..=..=..=...z', data: ['A', 'B', 'C', 'n', 'B', 'C', 'A', 'B', 'C', 'n']},
      ],
      head: { tick: -1 },
      config: { skin: 'narrow' },
    }
